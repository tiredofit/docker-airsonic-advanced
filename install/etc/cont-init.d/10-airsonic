#!/usr/bin/with-contenv bash

source /assets/functions/00-container
prepare_service
PROCESS_NAME="airsonic"

mkdir -p "${CONFIG_PATH}"

case ${DB_TYPE,,} in
    mariadb | mysql )
        print_debug "[db] Using MariaDB/MySQL mode for storing database information"
        DB_PORT=${DB_PORT:-"3306"}
        sanity_db
        db_ready mariadb
        cat <<EOF > "${CONFIG_PATH}/airsonic.properties"
DatabaseConfigType=embed
DatabaseConfigEmbedDriver=org.mariadb.jdbc.Driver
DatabaseConfigEmbedUrl=jdbc:mariadb://${DB_HOST}:${DB_PORT}/${DB_NAME}
DatabaseConfigEmbedUsername=${DB_USER}
DatabaseConfigEmbedPassword=${DB_PASS}
EOF
    ;;
    internal )
        print_debug "[db] Using internal liquibase"
        cat <<EOF > "${CONFIG_PATH}/airsonic.properties"
DatabaseConfigType=embed
DatabaseConfigEmbedDriver=org.hsqldb.jdbcDriver
DatabaseConfigEmbedUrl=jdbc:hsqldb:file:${CONFIG_PATH}/db/airsonic
DatabaseConfigEmbedUsername=sa
DatabaseConfigEmbedPassword=
EOF
    ;;
    postgres | postgresql )
        print_debug "[db] Using Postgresql mode for storing database information"
        DB_PORT=${DB_PORT:-"5432"}
        sanity_db
        db_ready postgres
        cat <<EOF > "${CONFIG_PATH}/airsonic.properties"
DatabaseConfigType=embed
DatabaseConfigEmbedDriver=org.postgresql.Driver
DatabaseConfigEmbedUrl=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}?stringtype=unspecified
DatabaseConfigEmbedUsername=${DB_USER}
DatabaseConfigEmbedPassword=${DB_PASS}
DatabaseUsertableQuote="
EOF
    ;;
esac

mkdir -p "${CONFIG_PATH}"/transcode
if [[ ! -e "${CONFIG_PATH}"/transcode/ffmpeg || ! -e  "${CONFIG_PATH}"/transcode/flac || ! -e "${CONFIG_PATH}"/transcode/lame  ]]; then
    ln -sf /usr/bin/ffmpeg "${CONFIG_PATH}"/transcode/
    ln -sf /usr/bin/flac "${CONFIG_PATH}"/transcode/
    ln -sf /usr/bin/lame "${CONFIG_PATH}"/transcode/
fi


chown -R ${AIRSONIC_USER}:${AIRSONIC_GROUP} /app
chown -R ${AIRSONIC_USER}:${AIRSONIC_GROUP} ${CONFIG_PATH}
mkdir -p /data/{music,playlists,podcasts}
chown -R ${AIRSONIC_USER}:${AIRSONIC_GROUP} /data/{music,playlists,podcasts}

liftoff
